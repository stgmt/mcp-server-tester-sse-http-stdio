name: NPM Publish

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  release:
    types: [created]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linter
      run: npm run lint
      
    # Run only unit tests in CI - e2e tests require live MCP servers
    - name: Run unit tests
      run: npm run test:unit

    - name: Build project
      run: npm run build

  publish-npm:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        registry-url: https://registry.npmjs.org/
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build project
      run: npm run build
    
    - name: Check if version changed
      id: version-check
      run: |
        CURRENT_VERSION=$(node -p "require('./package.json').version")
        PUBLISHED_VERSION=$(npm view mcp-server-tester-sse-http-stdio version 2>/dev/null || echo "0.0.0")
        echo "current-version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
        echo "published-version=$PUBLISHED_VERSION" >> $GITHUB_OUTPUT
        if [ "$CURRENT_VERSION" != "$PUBLISHED_VERSION" ]; then
          echo "should-publish=true" >> $GITHUB_OUTPUT
          echo "ðŸš€ Version changed: $PUBLISHED_VERSION â†’ $CURRENT_VERSION"
        else
          echo "should-publish=false" >> $GITHUB_OUTPUT
          echo "ðŸ“¦ Version unchanged: $CURRENT_VERSION"
        fi

    - name: Publish to NPM
      if: steps.version-check.outputs.should-publish == 'true'
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: Create GitHub Release
      if: steps.version-check.outputs.should-publish == 'true' && startsWith(github.ref, 'refs/tags/v')
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.version-check.outputs.current-version }}
        release_name: Release v${{ steps.version-check.outputs.current-version }}
        body: |
          ðŸš€ **Release v${{ steps.version-check.outputs.current-version }}**
          
          Automatic release created by GitHub Actions.
          
          ðŸ“¦ Published to NPM: https://www.npmjs.com/package/mcp-server-tester-sse-http-stdio/v/${{ steps.version-check.outputs.current-version }}
        draft: false
        prerelease: false