# üê≥ MCP Server Tester - Universal Docker Image
# 
# üîó GitHub Repository: https://github.com/stgmt/mcp-server-tester-sse-http-stdio
# üì¶ NPM Package: https://www.npmjs.com/package/mcp-server-tester-sse-http-stdio
# üêç PyPI Package: https://pypi.org/project/mcp-server-tester/
# üê≥ Docker Hub: https://hub.docker.com/r/stgmt/mcp-server-tester
# 
# –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –≤—Å–µ 3 —Å–ø–æ—Å–æ–±–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
# 1. NPM –ø–∞–∫–µ—Ç (Node.js/TypeScript)
# 2. Python –ø–∞–∫–µ—Ç 
# 3. Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä (—ç—Ç–æ—Ç —Ñ–∞–π–ª)
#
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
#   docker run --rm -v $(pwd):/workspace mcp-server-tester tools test.yaml --server-config config.json

FROM node:20-alpine

# –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
LABEL maintainer="MCP Server Tester Team"
LABEL version="1.4.1" 
LABEL description="Universal MCP Server Tester with NPM, Python, and Docker support"
LABEL org.opencontainers.image.source="https://github.com/stgmt/mcp-server-tester-sse-http-stdio"
LABEL org.opencontainers.image.url="https://github.com/stgmt/mcp-server-tester-sse-http-stdio"
LABEL org.opencontainers.image.documentation="https://github.com/stgmt/mcp-server-tester-sse-http-stdio#readme"

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
RUN apk add --no-cache \
    python3 \
    py3-pip \
    python3-dev \
    build-base \
    curl \
    git \
    bash \
    jq

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–æ–π —Å—Å—ã–ª–∫–∏ –¥–ª—è python
RUN ln -sf python3 /usr/bin/python

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ NPM –ø–∞–∫–µ—Ç–∞
RUN npm install -g mcp-server-tester-sse-http-stdio

# –°–æ–∑–¥–∞–Ω–∏–µ —Ä–∞–±–æ—á–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
WORKDIR /app

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ Python wrapper –∏—Å—Ö–æ–¥–Ω–∏–∫–æ–≤
COPY src/ ./src/
COPY requirements.txt ./
COPY setup.py ./
COPY pyproject.toml ./
COPY README.md ./

# –û–±–Ω–æ–≤–ª—è–µ–º ca-certificates –¥–ª—è —Ä–µ—à–µ–Ω–∏—è SSL –ø—Ä–æ–±–ª–µ–º
RUN apk update && apk add --no-cache ca-certificates && update-ca-certificates

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –∏ –ø–∞–∫–µ—Ç–∞ (–æ–±—Ö–æ–¥–∏–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è Alpine)
RUN pip3 install --break-system-packages --no-cache-dir --upgrade pip setuptools wheel && \
    pip3 install --break-system-packages --no-cache-dir -r requirements.txt && \
    pip3 install --break-system-packages --no-cache-dir -e .

# –°–æ–∑–¥–∞–Ω–∏–µ entrypoint —Å–∫—Ä–∏–ø—Ç–∞
COPY docker/entrypoint.sh /usr/local/bin/entrypoint.sh
RUN chmod +x /usr/local/bin/entrypoint.sh

# –°–æ–∑–¥–∞–Ω–∏–µ —É–¥–æ–±–Ω—ã—Ö –∞–ª–∏–∞—Å–æ–≤
RUN echo 'alias mcp-tester="mcp-server-tester"' >> /etc/bash.bashrc && \
    echo 'alias mcp-test="mcp-server-tester test"' >> /etc/bash.bashrc

# –†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
WORKDIR /workspace

# –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ–∑–Ω—ã–µ —É—Ç–∏–ª–∏—Ç—ã –≤ PATH
ENV PATH="/usr/local/bin:${PATH}"

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
ENV MCP_TESTER_DEFAULT_TIMEOUT=30000
ENV MCP_TESTER_DEFAULT_FORMAT=console

# –û—Ç–∫—Ä—ã—Ç—ã–µ –ø–æ—Ä—Ç—ã (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ª–æ–∫–∞–ª—å–Ω—ã—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤)
EXPOSE 8000 8001 8080

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD node --version && python3 --version && mcp-server-tester --version || exit 1

# Entrypoint –¥–ª—è –≥–∏–±–∫–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]

# –ö–æ–º–∞–Ω–¥–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é - –ø–æ–∫–∞–∑–∞—Ç—å help
CMD ["--help"]