#!/bin/bash

# üîÑ –°–∫—Ä–∏–ø—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∫–æ–º–∞–Ω–¥ –º–µ–∂–¥—É NPM –∏ Python –≤–µ—Ä—Å–∏—è–º–∏
# 
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
#   ./scripts/sync.sh           # –ü–æ–ª–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è
#   ./scripts/sync.sh --dry-run # –¢–æ–ª—å–∫–æ –ø–æ–∫–∞–∑–∞—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –±–µ–∑ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è
#   ./scripts/sync.sh --help    # –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏–∏ –≤—ã–≤–æ–¥–∞
info() { echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"; }
success() { echo -e "${GREEN}‚úÖ $1${NC}"; }
warning() { echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"; }
error() { echo -e "${RED}‚ùå $1${NC}"; }

# –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
show_help() {
    cat << EOF
üîÑ –°–∫—Ä–∏–ø—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∫–æ–º–∞–Ω–¥ NPM ‚Üî Python

–ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï:
    ./scripts/sync.sh [–û–ü–¶–ò–ò]

–û–ü–¶–ò–ò:
    --dry-run       –ü–æ–∫–∞–∑–∞—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –±–µ–∑ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è
    --force         –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ä–µ–∑–∞–ø–∏—Å—å –±–µ–∑ backup
    --help          –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É

–ü–†–ò–ú–ï–†–´:
    ./scripts/sync.sh                    # –ü–æ–ª–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è
    ./scripts/sync.sh --dry-run         # –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä
    ./scripts/sync.sh --force           # –ë–µ–∑ backup

–û–ü–ò–°–ê–ù–ò–ï:
    –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ—Ç –∫–æ–º–∞–Ω–¥—ã, –æ–ø—Ü–∏–∏ –∏ help
    –º–µ–∂–¥—É NPM –ø–∞–∫–µ—Ç–æ–º mcp-server-tester-sse-http-stdio –∏ Python wrapper.
    
    –®–∞–≥–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:
    1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π (Node.js, NPM –ø–∞–∫–µ—Ç)
    2. –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥ –∏–∑ NPM –ø–∞–∫–µ—Ç–∞
    3. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ Python –∫–æ–¥–∞
    4. Backup —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ñ–∞–π–ª–æ–≤ (–µ—Å–ª–∏ --force –Ω–µ —É–∫–∞–∑–∞–Ω)
    5. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ Python CLI –∏ Core –º–æ–¥—É–ª–µ–π
    6. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞ –æ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏

–†–ï–ó–£–õ–¨–¢–ê–¢:
    - src/mcp_server_tester/cli_generated.py  # –ù–æ–≤—ã–π CLI
    - src/mcp_server_tester/core_update.py   # –û–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–ª—è core
    - sync_report.md                         # –û—Ç—á–µ—Ç –æ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
    - backups/TIMESTAMP/                     # Backup —Ñ–∞–π–ª–æ–≤

EOF
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
check_dependencies() {
    info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    
    # Node.js
    if ! command -v node &> /dev/null; then
        error "Node.js –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Å https://nodejs.org/"
        exit 1
    fi
    
    # NPX
    if ! command -v npx &> /dev/null; then
        error "NPX –Ω–µ –Ω–∞–π–¥–µ–Ω. –û–±–Ω–æ–≤–∏—Ç–µ Node.js/NPM"
        exit 1
    fi
    
    # NPM –ø–∞–∫–µ—Ç
    if ! npx mcp-server-tester-sse-http-stdio --help &> /dev/null; then
        warning "NPM –ø–∞–∫–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é..."
        npm install -g mcp-server-tester-sse-http-stdio
    fi
    
    success "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
check_repo_state() {
    info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."
    
    if [[ -n $(git status --porcelain) ]]; then
        warning "–ï—Å—Ç—å –Ω–µ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ git"
        if [[ "$FORCE" != "true" ]]; then
            echo "–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Å–¥–µ–ª–∞—Ç—å commit –ø–µ—Ä–µ–¥ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–µ–π"
            read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/N): " -n 1 -r
            echo
            if [[ ! $REPLY =~ ^[Yy]$ ]]; then
                info "–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞"
                exit 0
            fi
        fi
    fi
    
    success "–°–æ—Å—Ç–æ—è–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ"
}

# –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
run_sync() {
    info "–ó–∞–ø—É—Å–∫ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏..."
    
    cd "$(dirname "$0")"
    
    if [[ "$DRY_RUN" == "true" ]]; then
        info "DRY RUN: –ü–æ–∫–∞–∑—ã–≤–∞—é –∏–∑–º–µ–Ω–µ–Ω–∏—è –±–µ–∑ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è"
        export DRY_RUN=true
    fi
    
    # –ó–∞–ø—É—Å–∫ Node.js —Å–∫—Ä–∏–ø—Ç–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
    node sync_commands.js
    
    if [[ "$DRY_RUN" != "true" ]]; then
        success "–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
        info "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã:"
        echo "  - sync_report.md - –æ—Ç—á–µ—Ç –æ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏"
        echo "  - src/mcp_server_tester/cli_generated.py - –Ω–æ–≤—ã–π CLI"
        echo "  - commands_extracted.json - –∏–∑–≤–ª–µ—á–µ–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã"
        
        # –ü–æ–∫–∞–∑–∞—Ç—å diff –µ—Å–ª–∏ –µ—Å—Ç—å git
        if command -v git &> /dev/null; then
            info "Git diff –∏–∑–º–µ–Ω–µ–Ω–∏–π:"
            git diff --name-only | head -10
        fi
    fi
}

# –ü–∞—Ä—Å–∏–Ω–≥ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
FORCE=false
DRY_RUN=false

while [[ $# -gt 0 ]]; do
    case $1 in
        --dry-run)
            DRY_RUN=true
            shift
            ;;
        --force)
            FORCE=true
            shift
            ;;
        --help|-h)
            show_help
            exit 0
            ;;
        *)
            error "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ–ø—Ü–∏—è: $1"
            echo "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ --help –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏"
            exit 1
            ;;
    esac
done

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
main() {
    info "üîÑ –ù–∞—á–∏–Ω–∞—é —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é –∫–æ–º–∞–Ω–¥ NPM ‚Üî Python"
    echo
    
    check_dependencies
    check_repo_state
    run_sync
    
    echo
    success "üéâ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"
}

# –ó–∞–ø—É—Å–∫ –µ—Å–ª–∏ –Ω–µ source'd
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    main "$@"
fi